
// TODO: Auto-generated Javadoc
/**
 * The Class TripStopNode.
 */
public class TripStopNode {
	
	/** The data. */
	private TripStop data;
	
	/** The next. */
	private TripStopNode next;
	
	/** The prev. */
	private TripStopNode prev;
	
	/**
	 * Instantiates a new trip stop node.
	 *
	 * @param initData the init data
	 * @throws IllegalArgumentException the illegal argument exception
	 */
	public TripStopNode(TripStop initData)throws IllegalArgumentException
	{
		if (initData == null)
		{
			throw new IllegalArgumentException();
		}
		data = initData;
		prev = null;
		next = null;
	}
	
	/**
	 * Gets the data.
	 *
	 * @return the data
	 */
	public TripStop getData()
	{
		return data;
	}
	
	/**
	 * Sets the data.
	 *
	 * @param newData the new data
	 * @throws IllegalArgumentException the illegal argument exception
	 */
	public void setData(TripStop newData)throws IllegalArgumentException
	{
		if (newData == null)
		{
			throw new IllegalArgumentException();
		}
		data = newData;
	}
	
	/**
	 * Gets the next.
	 *
	 * @return the next
	 */
	public TripStopNode getNext()
	{
		return next;
	}
	
	/**
	 * Sets the next.
	 *
	 * @param newNext the new next
	 */
	public void setNext(TripStopNode newNext)
	{
		next = newNext;
	}
	
	/**
	 * Gets the prev.
	 *
	 * @return the prev
	 */
	public TripStopNode getPrev()
	{
		return prev;
	}
	
	/**
	 * Sets the prev.
	 *
	 * @param newPrev the new prev
	 */
	public void setPrev(TripStopNode newPrev)
	{
		prev = newPrev;
	}
	
	/**
	 * Clone.
	 *
	 * @return the object
	 */
	public Object Clone()
	{
		System.out.println("data = " + data);
		TripStopNode clonedNode = new TripStopNode(this.data);
		System.out.println("ClonedNode = " + clonedNode);
		//clonedNode.Clone();
		return clonedNode;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
		return data.getLocation() +  " " + data.getActivity() + "\t\t\t\t " + data.getDistance();
	}
}
